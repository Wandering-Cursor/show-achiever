# Generated by Django 5.1.6 on 2025-02-15 09:44

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Attendee",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "telegram_id",
                    models.CharField(max_length=128, verbose_name="Telegram ID"),
                ),
                (
                    "first_name",
                    models.CharField(max_length=256, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=256, verbose_name="Last Name"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=256, verbose_name="Username"
                    ),
                ),
                (
                    "show_publicly",
                    models.BooleanField(
                        default=False,
                        help_text="Should information about this attendee be shown publicly?(for example - name and username in the leaderboard)",
                        verbose_name="Show Publicly",
                    ),
                ),
            ],
            options={
                "verbose_name": "Attendee",
                "verbose_name_plural": "Attendees",
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512, verbose_name="Event Name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Event Description"),
                ),
                (
                    "poster",
                    models.ImageField(
                        blank=True,
                        upload_to="event_posters/",
                        verbose_name="Event Poster",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event",
                "verbose_name_plural": "Events",
            },
        ),
        migrations.CreateModel(
            name="AttendeeWallet",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "attendee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wallets",
                        to="achiever_app.attendee",
                        verbose_name="Attendee",
                    ),
                ),
            ],
            options={
                "verbose_name": "Attendee Wallet",
                "verbose_name_plural": "Attendee Wallets",
            },
        ),
        migrations.CreateModel(
            name="AttendeeWalletBalance",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=4, max_digits=20, verbose_name="Amount"
                    ),
                ),
                (
                    "wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="balances",
                        to="achiever_app.attendeewallet",
                        verbose_name="Wallet",
                    ),
                ),
            ],
            options={
                "verbose_name": "Attendee Wallet Balance",
                "verbose_name_plural": "Attendee Wallet Balances",
            },
        ),
        migrations.CreateModel(
            name="Currency",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Full Currency Name"),
                ),
                ("code", models.CharField(max_length=5, verbose_name="Currency Code")),
                (
                    "icon",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="currency_icons",
                        verbose_name="Currency Icon",
                    ),
                ),
            ],
            options={
                "verbose_name": "Currency",
                "verbose_name_plural": "Currencies",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("code",), name="unique_currency_code"
                    )
                ],
            },
        ),
        migrations.AddField(
            model_name="attendeewallet",
            name="currency",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="achiever_app.currency",
                verbose_name="Currency",
            ),
        ),
        migrations.CreateModel(
            name="EventAdmin",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users",
                        to="achiever_app.event",
                        verbose_name="Event",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_admin",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event Admin",
                "verbose_name_plural": "Event Admins",
            },
        ),
        migrations.CreateModel(
            name="Goal",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512, verbose_name="Goal Name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Goal Description"),
                ),
                (
                    "poster",
                    models.ImageField(
                        blank=True,
                        upload_to="goal_posters/",
                        verbose_name="Goal Poster",
                    ),
                ),
                (
                    "required_amount",
                    models.DecimalField(
                        decimal_places=4, max_digits=20, verbose_name="Required Amount"
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="achiever_app.currency",
                        verbose_name="Currency",
                    ),
                ),
                (
                    "for_event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="achiever_app.event",
                        verbose_name="Event",
                    ),
                ),
            ],
            options={
                "verbose_name": "Goal",
                "verbose_name_plural": "Goals",
            },
        ),
        migrations.CreateModel(
            name="GoalTransaction",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=4, max_digits=20, verbose_name="Amount"
                    ),
                ),
                (
                    "from_attendee_balance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="achiever_app.attendeewalletbalance",
                        verbose_name="From Attendee Balance",
                    ),
                ),
                (
                    "goal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="achiever_app.goal",
                        verbose_name="Goal",
                    ),
                ),
            ],
            options={
                "verbose_name": "Goal Transaction",
                "verbose_name_plural": "Goal Transactions",
            },
        ),
        migrations.CreateModel(
            name="GoalBalance",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=4, max_digits=20, verbose_name="Amount"
                    ),
                ),
                (
                    "goal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="achiever_app.goal",
                        verbose_name="Goal",
                    ),
                ),
                (
                    "goal_transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="achiever_app.goaltransaction",
                        verbose_name="Goal Transaction",
                    ),
                ),
            ],
            options={
                "verbose_name": "Goal Balance",
                "verbose_name_plural": "Goal Balances",
            },
        ),
        migrations.CreateModel(
            name="Partner",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512, verbose_name="Partner Name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Partner Description"),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        upload_to="partner_logos/",
                        verbose_name="Partner Logo",
                    ),
                ),
                (
                    "for_event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="achiever_app.event",
                        verbose_name="Event",
                    ),
                ),
            ],
            options={
                "verbose_name": "Partner",
                "verbose_name_plural": "Partners",
            },
        ),
        migrations.CreateModel(
            name="PartnerTask",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512, verbose_name="Task Name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Task Description"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, upload_to="task_images/", verbose_name="Task Image"
                    ),
                ),
                (
                    "reward_amount",
                    models.DecimalField(
                        decimal_places=4, max_digits=20, verbose_name="Reward Amount"
                    ),
                ),
                (
                    "partner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="achiever_app.partner",
                        verbose_name="Partner",
                    ),
                ),
                (
                    "reward_currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="achiever_app.currency",
                        verbose_name="Reward Currency",
                    ),
                ),
            ],
            options={
                "verbose_name": "Partner Task",
                "verbose_name_plural": "Partner Tasks",
            },
        ),
        migrations.CreateModel(
            name="PartnerTaskItem",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_used", models.BooleanField(default=False, verbose_name="Is Used")),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="achiever_app.partnertask",
                        verbose_name="Task",
                    ),
                ),
            ],
            options={
                "verbose_name": "Partner Task Item",
                "verbose_name_plural": "Partner Task Items",
            },
        ),
        migrations.AddField(
            model_name="attendeewalletbalance",
            name="for_partner_task_item",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="wallet_balances",
                to="achiever_app.partnertaskitem",
                verbose_name="Partner Task Item",
            ),
        ),
        migrations.AddConstraint(
            model_name="attendeewallet",
            constraint=models.UniqueConstraint(
                fields=("attendee", "currency"), name="unique_attendee_currency"
            ),
        ),
        migrations.AddConstraint(
            model_name="attendeewalletbalance",
            constraint=models.UniqueConstraint(
                fields=("wallet", "for_partner_task_item"), name="unique_wallet_task"
            ),
        ),
    ]
